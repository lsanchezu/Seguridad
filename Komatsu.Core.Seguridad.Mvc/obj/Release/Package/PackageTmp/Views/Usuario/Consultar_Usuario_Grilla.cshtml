@model Komatsu.Core.Seguridad.Mvc.Models.ViewModel.UsuarioViewModel
@using Komatsu.Core.Seguridad.Common;

@{
    if (Model.UsuarioPaginacion.ListaUsuario.Count < 1)
    {
        @Komatsu.Core.Seguridad.Validation.Globals.Globals.GridSearchNotFound   
    }
    else
    {
        WebGrid Grid = new WebGrid(rowsPerPage: Model.UsuarioPaginacion.Paginacion.RowsPerPage, ajaxUpdateContainerId: "Id_Consultar_Usuario_Grilla", ajaxUpdateCallback: "SetTotalRegistrosUsuario");
        Grid.Bind(Model.UsuarioPaginacion.ListaUsuario, autoSortAndPage: false, rowCount: Model.UsuarioPaginacion.Paginacion.RowCount);
    
        <div id="Id_Consultar_Usuario_Grilla"> 
            @Grid.GetHtml(
                headerStyle: "fix_head",
                rowStyle: "fix_td",
                alternatingRowStyle: "fix_td",
                footerStyle: "pagination",
                htmlAttributes: new { id = "GrillaConsultaUsuario", @class = "tDefault" },
                mode: WebGridPagerModes.All,
                firstText: Komatsu.Core.Seguridad.Validation.Globals.Globals.ButtonPageFirst_Text,
                previousText: Komatsu.Core.Seguridad.Validation.Globals.Globals.ButtonPageBack_Text,
                nextText: Komatsu.Core.Seguridad.Validation.Globals.Globals.ButtonPageNext_Text,
                lastText: Komatsu.Core.Seguridad.Validation.Globals.Globals.ButtonPageLast_Text,
                columns: Grid.Columns(
                Grid.Column("UserName", "Usuario", canSort: true, style: "person centrada"),
                Grid.Column("NombreApellido", "Nombres/Apellidos", canSort: true, style: "person centrada"),
                Grid.Column("EmailCoorporativo", "Email", canSort: true, style: "person centrada"),
                Grid.Column("Estado.Nombre", "Estado", canSort: true, style: "person centrada"),
                Grid.Column("", Komatsu.Core.Seguridad.Validation.Globals.Globals.GridHeaderActions_ActivateDeactivate, canSort: false, style: "person centrada", format:
                @<text>
                    @if (item.Estado.IdEstado == 1)
                        {
                    <a  style="cursor:pointer" class="darbajae" onclick="ActivarDesactivarUsuario(@item.IdUsuario, 2, '@Komatsu.Core.Seguridad.Validation.Security.Security.Confirmacion_Desactivar')"/>                                                                          
                        }
                        else
                        {
                    <a  style="cursor:pointer" class="daraltae" onclick="ActivarDesactivarUsuario(@item.IdUsuario, 1, '@Komatsu.Core.Seguridad.Validation.Security.Security.Confirmacion_Activar')"/>       
                        }
                </text>),
                Grid.Column("", "Detalle", canSort: false, style: "person centrada", format: 
                @<text>
                    @{
                        <a  style="" class="select_table" onclick="EditarUsuario(@item.IdUsuario);"/> 
                    }                                                            
                </text>),
                Grid.Column("", "Roles", canSort: false, style: "person centrada", format:
                @<text>
                    @{ 
                        <a  style="" class="view_table" onclick="VerRolesUsuario(@item.IdUsuario);"/>
                    }          
                </text>
                        )
                    )
                )
            @Html.HiddenFor(model => model.UsuarioPaginacion.Paginacion.RowCount, new { @id = "RowCount" })
            @Html.HiddenFor(model => model.UsuarioPaginacion.Paginacion.RowsPerPage, new { @id = "RowsPerPage" })
            @Html.HiddenFor(model => model.UsuarioPaginacion.Paginacion.FooterDesc, new { @id = "FooterDesc" })
        </div>
    }
    
}